{
	"info": {
		"_postman_id": "ede7c4e8-35d9-4dd3-904b-6cc6600906b9",
		"name": "QA-Commerce API",
		"description": "Coleção de testes para a API QA-Commerce.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "151250"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login com sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Deve validar as propridade message\", function () {",
									"    pm.expect(pm.response.json()).to.have.property(\"name\");",
									"});",
									"",
									"pm.environment.set(\"token\", pm.response.json().token);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{user}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Carrinho",
			"item": [
				{
					"name": "Obter Produtos do Carrinho",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Cada objeto no array deve ter as propriedades productId, name, price, quantity\", function () {",
									"    const responseJson = pm.response.json();",
									"    responseJson.forEach(item => {",
									"        pm.expect(item).to.have.property('productId');",
									"        pm.expect(item).to.have.property('name');",
									"        pm.expect(item).to.have.property('price');",
									"        pm.expect(item).to.have.property('quantity');",
									"",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/carrinho/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"carrinho",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remover Produto do Carrinho",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Deve validar mensagem de retorno\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Todos os itens do carrinho removidos com sucesso.\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/carrinho/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"carrinho",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remover Produto do Carrinho por item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Deve validar mensagem de retorno\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Item do carrinho removido com sucesso.\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/carrinho/1/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"carrinho",
								"1",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adicionar produto ao carrinho",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Deve validar as propridade message\", function () {",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");",
									"});",
									"",
									"pm.test(\"Deve validar mensagem de retorno\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Produto adicionado ao carrinho com sucesso.\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": 1,\n  \"productId\": 9,\n  \"quantity\": 100\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/carrinho",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"carrinho"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Usuarios",
			"item": [
				{
					"name": "Listar Usuarios",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Cada objeto no array deve ter as propriedades id, name, email, isAdmin\", function () {",
									"    const responseJson = pm.response.json();",
									"    responseJson.forEach(item => {",
									"        pm.expect(item).to.have.property('id');",
									"        pm.expect(item).to.have.property('name');",
									"        pm.expect(item).to.have.property('email');",
									"        pm.expect(item).to.have.property('isAdmin');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Criar usuário ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Deve validar as propridade message\", function () {",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");",
									"});",
									"",
									"pm.test(\"Deve validar mensagem de retorno\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Usuário criado com sucesso.\");",
									"});",
									"",
									"pm.environment.set(\"id_user\", pm.response.json().id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Fabio token\",\n  \"email\": \"{{$randomEmail}}\", \n  \"password\": \"teste@123\",\n  \"isAdmin\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Criar usuário repetido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Deve validar as propridade message\", function () {",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");",
									"});",
									"",
									"pm.test(\"Deve validar mensagem de retorno\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Email já cadastrado.\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"fabio@repetido.com\",\n  \"password\": \"Password123!\",\n  \"isAdmin\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Atualizar Usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Deve validar as propridade message\", function () {",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");",
									"});",
									"",
									"pm.test(\"Deve validar mensagem de retorno\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Usuário atualizado com sucesso.\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiaXNBZG1pbiI6MSwiaWF0IjoxNzQxMTIwMzA1LCJleHAiOjE3NDExMjM5MDV9.UOxP_NgWcKgDTHEEOubulFxoSfrtnHO1BokO9ge4U4A",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Tamara Editado\",\n  \"email\": \"tamara@teste2.com\",\n  \"password\": \"teste\",\n  \"isAdmin\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Atualizar Usuario com token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Deve validar as propridade message\", function () {",
									"    pm.expect(pm.response.json()).to.have.property(\"message\");",
									"});",
									"",
									"pm.test(\"Deve validar mensagem de retorno\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Usuário atualizado com sucesso.\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Fabio editado\",\n  \"email\": \"fabio@teste.com\",\n  \"password\": \"teste@123\",\n  \"isAdmin\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar Usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Deve validar mensagem de retorno\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Usuário deletado com sucesso.\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{id_user}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{id_user}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Checkout",
			"item": [
				{
					"name": "Finalizar pedido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Deve validar as propridade message\", function () {",
									"    pm.expect(pm.response.json()).to.have.property(\"id\");",
									"\t\tpm.expect(pm.response.json()).to.have.property(\"orderNumber\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": 1,\n  \"firstName\": \"Johfffn\",\n  \"lastName\": \"Doe\",\n  \"address\": \"123 Main St\",\n  \"number\": \"456\",\n  \"cep\": \"12345678\",\n  \"phone\": \"1234567890\",\n  \"email\": \"john.doe@exsdfsample.com\",\n  \"paymentMethod\": \"credit_card\",\n  \"cardNumber\": \"1234123412341234\",\n  \"cardExpiry\": \"12/2025\",\n  \"cardCvc\": \"123\",\n  \"boletoCode\": \"23793.38128 60082.677139 66003.996498 1 89440000010000\",\n  \"pixKey\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"createAccount\": false,\n  \"password\": \"Password123!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/checkout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"checkout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Produtos",
			"item": [
				{
					"name": "Listar Produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Cada objeto no array deve ter as propriedades productId, name, price, quantity\", function () {",
									"    const responseJson = pm.response.json().products;",
									"    responseJson.forEach(item => {",
									"        pm.expect(item).to.have.property('id');",
									"        pm.expect(item).to.have.property('name');",
									"        pm.expect(item).to.have.property('description');",
									"        pm.expect(item).to.have.property('price');",
									"        pm.expect(item).to.have.property('image');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/produtos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"produtos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obter Detalhes de um Produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code deve ser 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Cada objeto no array deve ter as propriedades productId, name, price, quantity\", function () {",
									"    const responseJson = pm.response.json();",
									"        pm.expect(responseJson).to.have.property('id');",
									"        pm.expect(responseJson).to.have.property('name');",
									"        pm.expect(responseJson).to.have.property('description');",
									"        pm.expect(responseJson).to.have.property('price');",
									"        pm.expect(responseJson).to.have.property('image'); ",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/produtos/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"produtos",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pedidos",
			"item": [
				{
					"name": "Listar Pedidos do Usuário",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/orders?userId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"orders"
							],
							"query": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "test",
			"script": {
				"exec": [
					"const token = pm.response.json().token;",
					"",
					"if (token) {",
					"    pm.environment.set(\"token\", token);",
					"}"
				],
				"type": "text/javascript"
			}
		}
	]
}